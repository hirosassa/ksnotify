name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Release binary
    env:
      cargo: cargo
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ksnotify
            asset_name: ksnotify-x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: ksnotify
            asset_name: ksnotify-x86_64-unknown-linux-musl
          # - os: ubuntu-latest
          #   target: x86_64-pc-windows-gnu
          #   artifact_name: ksnotify.exe
          #   asset_name: ksnotify-x86_64-pc-windows-gnu.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ksnotify
            asset_name: ksnotify-x86_64-apple-darwin


    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}

      - name: Install dependencies
        run: sudo apt-get install pkg-config libssl-dev
        if: matrix.os == '' || startsWith(matrix.os, 'ubuntu')

      - name: Install cross
        uses: taiki-e/install-action@cross
        if: matrix.os == '' || startsWith(matrix.os, 'ubuntu')

      - run: echo "cargo=cross" >>"${GITHUB_ENV}"
        if: matrix.target != 'x86_64-unknown-linux-gnu' && startsWith(matrix.os, 'ubuntu')

      - name: Cross build with all features
        env:
          OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu/
          OPENSSL_INCLUDE_DIR: /usr/include/openssl/
        run: $cargo build --release --target ${{ matrix.target }} --all-features --verbose

      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@2.3.0
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
      #     asset_name: ${{ matrix.asset_name }}
      #     tag: ${{ github.ref }}
      #     overwrite: true
