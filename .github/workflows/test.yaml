name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Check on ${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        run: |
          rustup toolchain install ${{ matrix.rust }} --profile minimal --component rustfmt,clippy
          rustup default ${{ matrix.rust }}

      - name: Run cargo check
        run: cargo check
        continue-on-error: ${{ matrix.rust == 'nightly' || matrix.rust == 'beta' }}

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        continue-on-error: ${{ matrix.rust == 'nightly' || matrix.rust == 'beta' }}

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings -W clippy::nursery
        continue-on-error: ${{ matrix.rust == 'nightly' || matrix.rust == 'beta' }}

      - name: Run cargo test
        run: cargo test --release --all-features
        continue-on-error: ${{ matrix.rust == 'nightly' || matrix.rust == 'beta' }}

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true
        continue-on-error: true
